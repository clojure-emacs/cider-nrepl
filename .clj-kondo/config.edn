{:hooks {:analyze-call {cider.nrepl.middleware.out/with-out-binding
                        hooks.core/with-out-binding}}
 :lint-as {cider.log.repl-test/with-each-framework clojure.core/let
           cider.nrepl.middleware.log-test/with-each-framework clojure.core/let
           clojure.test.check.clojure-test/defspec clojure.test/deftest
           clojure.test.check.properties/for-all clojure.core/let}
 :linters {:unresolved-symbol {:exclude [(cider.nrepl/def-wrapper)
                                         (cider.nrepl.middleware.util.instrument/definstrumenter)
                                         (cider.nrepl.middleware.util.instrument/with-break)
                                         (cider.nrepl.middleware.util.instrument/instrument-special-form)
                                         (cider.nrepl.middleware.util.instrument/instrument-coll)
                                         (cider.nrepl.print-method/def-print-method)]}
           :unused-import {:level :off}
           :unresolved-namespace {:exclude [clojure.main]}}
 :output {:progress true
          :exclude-files ["data_readers" "tasks"]}}
