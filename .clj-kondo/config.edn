{:hooks   {:analyze-call {cider.nrepl.middleware.out/with-out-binding
                          hooks.core/with-out-binding}}
 :lint-as {cider.nrepl.middleware.log-test/with-each-framework clojure.core/let}
 ;; :exclude-files ["middleware/debug.clj"]
 :linters {:unresolved-symbol     {:exclude [(cider.nrepl/def-wrapper)
                                             (cider.nrepl.middleware.util.instrument/definstrumenter)
                                             (cider.nrepl.middleware.util.instrument/with-break)
                                             (cider.nrepl.middleware.util.instrument/instrument-special-form)
                                             (cider.nrepl.middleware.util.instrument/instrument-coll)
                                             (cider.nrepl.print-method/def-print-method)
                                             (cljs.test/is [match? thrown-match?])
                                             (clojure.test/is [match? thrown-match?])]}
           :unused-import         {:level :off}
           :unresolved-var        {:level :off}
           :unused-binding        {:level :off}
           :refer-all             {:level :off}
           :unused-namespace      {:level :off}
           :missing-test-assertion {:level :off}
           :use                   {:level :off}
           :redundant-let         {:level :off}
           :unused-private-var    {:level :off}
           :missing-else-branch   {:level :off}
           :unused-referred-var   {:level :off}
           :type-mismatch         {:level :off}
           :unresolved-namespace  {:exclude [clojure.main nrepl.transport js]}}
 :output  {:progress      true
           :exclude-files ["data_readers" "tasks"]}}
